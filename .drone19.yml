kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

steps:
- name: startSlack
  image: plugins/slack
  channel: jenkins
  environment:
    slack_webhook:
      from_secret: slack_webhook
  username: drone
  icon_url: https://avatars2.githubusercontent.com/u/2181346?s=200&v=4
  template: >
    *start* building *{{repo.name}}* <${DRONE_BUILD_LINK}|#{{build.number}}>.
    Someone gave *{{build.branch}}* a little push. (staging test, please ignore)
  when:
    event: [push]
    branch: [dev, stag, master]

- name: restoreCache
  image: drillster/drone-volume-cache
  restore: true
  mount:
  - ./.yarn-cache
  - ./node_modules
  volumes:
  - name: vol-0
    path: /cache
  when:
    event: [push]
    branch: [dev, stag, master]

- name: getCmsDevConfig
  image: gcr.io/mirrormedia-1470651750304/drone-cloud-sdk:latest
  environment:
    google_credentials:
      from_secret: google_credentials
  commands:
  - gcloud source repos clone configs ../configs
  - cp ../configs/openwarehouse/dev/readr/config.cms.js ./configs/config.js
  - cp ../configs/openwarehouse/dev/gcskeyfile.json ./configs/gcskeyfile.json
  when:
    event: [push]
    branch: [dev, stag, master]

- name: buildCmsThenPublish
  image: plugins/gcr
  repo: mirrormedia-1470651750304/${DRONE_REPO_NAME}
  tag: ${DRONE_BRANCH}_${DRONE_COMMIT_AUTHOR}_${DRONE_BUILD_NUMBER}_cms
  environment:
    DOCKER_LAUNCH_DEBUG: 'true'
    google_credentials:
      from_secret: google_credentials
  when:
    event: [push]
    branch: [dev, stag, master]

- name: deployCmsDev
  image: nytimes/drone-gke
  zone: asia-east1-a
  cluster: dev
  namespace: default
  verbose: true
  environment:
    token:
      from_secret: google_credentials
  vars:
    image: gcr.io/mirrormedia-1470651750304/${DRONE_REPO_NAME}:${DRONE_BRANCH}_${DRONE_COMMIT_AUTHOR}_${DRONE_BUILD_NUMBER}_cms
    app: ${DRONE_REPO_NAME}-cms
    tier: backend
  when:
    event: [push]
    branch: [dev, stag, master]

- name: getGraphQLDevConfig
  image: gcr.io/mirrormedia-1470651750304/drone-cloud-sdk:latest
  environment:
    google_credentials:
      from_secret: google_credentials
  commands:
  # - gcloud source repos clone configs ../configs
  - cp ../configs/openwarehouse/dev/readr/config.graphql.js ./configs/config.js
  - cp ../configs/openwarehouse/dev/gcskeyfile.json ./configs/gcskeyfile.json
  when:
    event: [push]
    branch: [dev, stag, master]

- name: buildGraphQLThenPublish
  image: plugins/gcr
  repo: mirrormedia-1470651750304/${DRONE_REPO_NAME}
  tag: ${DRONE_BRANCH}_${DRONE_COMMIT_AUTHOR}_${DRONE_BUILD_NUMBER}_graphql
  environment:
    DOCKER_LAUNCH_DEBUG: 'true'
    google_credentials:
      from_secret: google_credentials
  when:
    event: [push]
    branch: [dev, stag, master]

- name: deployGraphQLDev
  image: nytimes/drone-gke
  zone: asia-east1-a
  cluster: dev
  namespace: default
  verbose: true
  environment:
    token:
      from_secret: google_credentials
  vars:
    image: gcr.io/mirrormedia-1470651750304/${DRONE_REPO_NAME}:${DRONE_BRANCH}_${DRONE_COMMIT_AUTHOR}_${DRONE_BUILD_NUMBER}_graphql
    app: ${DRONE_REPO_NAME}-graphql
    tier: backend
  when:
    event: [push]
    branch: [dev, stag, master]

- name: deployExternalGraphQLDev
  image: nytimes/drone-gke
  zone: asia-east1-a
  cluster: dev
  namespace: default
  verbose: true
  environment:
    token:
      from_secret: google_credentials
  vars:
    image: gcr.io/mirrormedia-1470651750304/${DRONE_REPO_NAME}:${DRONE_BRANCH}_${DRONE_COMMIT_AUTHOR}_${DRONE_BUILD_NUMBER}_graphql
    app: ${DRONE_REPO_NAME}-external-graphql
    tier: backend
  when:
    event: [push]
    branch: [dev, stag, master]

- name: rebuildCache
  image: drillster/drone-volume-cache
  rebuild: true
  mount:
  - ./.yarn-cache
  - ./node_modules
  volumes:
  - name: vol-0
    path: /cache
  when:
    branch: [dev, stag, master]

- name: finishSlack
  image: plugins/slack
  channel: jenkins
  environment:
    slack_webhook:
      from_secret: slack_webhook
  username: drone
  icon_url: https://avatars2.githubusercontent.com/u/2181346?s=200&v=4
  when:
    status: [success, failure]
    event: [push]
    branch: [dev, stag, master]
  template: >
    {{#success build.status}}
      *success* ${DRONE_REPO_NAME}:${DRONE_BRANCH}_${DRONE_COMMIT_AUTHOR}_${DRONE_BUILD_NUMBER} was well served.
      Check out our new <https://ks-stag.readr.tw//admin|Readrstone>. (staging test, please ignore)
    {{else}}
      Houston, we have a problem. Build <${DRONE_BUILD_LINK}|#{{build.number}}> failed. D(staging test, please ignore)
    {{/success}}

volumes:
- name: vol-0
  host:
    path: /tmp/cache
